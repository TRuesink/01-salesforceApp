[{"/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/index.js":"1","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/components/App.js":"2","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/reducers/index.js":"3","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/components/Opportunities/OppList.js":"4","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/history.js":"5","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/components/Leads/LeadList.js":"6","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/components/dashboard/DashboardPage.js":"7","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/components/LandingPage.js":"8","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/components/Header.js":"9","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/actions/index.js":"10","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/apis/salesforceService.js":"11","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/actions/types.js":"12","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/reducers/formStatusReducer.js":"13","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/reducers/userReducer.js":"14","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/components/SideBar.js":"15","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/components/Opportunities/OppPage.js":"16","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/components/FilterBar.js":"17","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/reducers/accountReducer.js":"18","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/reducers/contactReducer.js":"19","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/reducers/opportunityReducer.js":"20","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/components/Opportunities/OppItem.js":"21","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/reducers/loadingReducer.js":"22","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/components/Opportunities/OppDetail.js":"23","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/components/Opportunities/OppCreate.js":"24","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/components/Opportunities/OppForm.js":"25","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/components/Modal.js":"26","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/reducers/metadataReducer.js":"27","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/components/Path.js":"28","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/reducers/editModeReducer.js":"29"},{"size":706,"mtime":1608553977551,"results":"30","hashOfConfig":"31"},{"size":2465,"mtime":1608650973207,"results":"32","hashOfConfig":"31"},{"size":912,"mtime":1608665855231,"results":"33","hashOfConfig":"31"},{"size":1345,"mtime":1608602682351,"results":"34","hashOfConfig":"31"},{"size":113,"mtime":1608558614458,"results":"35","hashOfConfig":"31"},{"size":146,"mtime":1608133537827,"results":"36","hashOfConfig":"31"},{"size":161,"mtime":1608133601566,"results":"37","hashOfConfig":"31"},{"size":3564,"mtime":1608515671178,"results":"38","hashOfConfig":"31"},{"size":1109,"mtime":1608555337016,"results":"39","hashOfConfig":"31"},{"size":3333,"mtime":1608670662019,"results":"40","hashOfConfig":"31"},{"size":81,"mtime":1608210086946,"results":"41","hashOfConfig":"31"},{"size":861,"mtime":1608666555023,"results":"42","hashOfConfig":"31"},{"size":291,"mtime":1608208223614,"results":"43","hashOfConfig":"31"},{"size":315,"mtime":1608510498174,"results":"44","hashOfConfig":"31"},{"size":1854,"mtime":1608663489591,"results":"45","hashOfConfig":"31"},{"size":1392,"mtime":1608607362316,"results":"46","hashOfConfig":"31"},{"size":3224,"mtime":1608638376013,"results":"47","hashOfConfig":"31"},{"size":315,"mtime":1608296958788,"results":"48","hashOfConfig":"31"},{"size":315,"mtime":1608298132659,"results":"49","hashOfConfig":"31"},{"size":572,"mtime":1608669936470,"results":"50","hashOfConfig":"31"},{"size":439,"mtime":1608521132255,"results":"51","hashOfConfig":"31"},{"size":286,"mtime":1608510957536,"results":"52","hashOfConfig":"31"},{"size":4225,"mtime":1608671661911,"results":"53","hashOfConfig":"31"},{"size":962,"mtime":1608590854168,"results":"54","hashOfConfig":"31"},{"size":4582,"mtime":1608668896204,"results":"55","hashOfConfig":"31"},{"size":570,"mtime":1608665227543,"results":"56","hashOfConfig":"31"},{"size":401,"mtime":1608662403924,"results":"57","hashOfConfig":"31"},{"size":2033,"mtime":1608671645402,"results":"58","hashOfConfig":"31"},{"size":268,"mtime":1608665676799,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},"1qgh9fj",{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"63"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"63"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"63"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"63"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"63"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"63"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"63"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/index.js",["130","131"],"// third part packages\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport { Router } from \"react-router-dom\";\nimport history from \"./history\";\n\n// components and reducers\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\n// setup redux dev tools\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n",["132","133"],"/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/components/App.js",["134","135"],"import React from \"react\";\nimport SideBar from \"./SideBar\";\nimport { Router, Route, Switch, Link, BrowserRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\n// Import components\nimport LandingPage from \"./LandingPage\";\nimport LeadList from \"./Leads/LeadList\";\nimport DashboardPage from \"./dashboard/DashboardPage\";\nimport Header from \"./Header\";\n\nimport OppPage from \"./Opportunities/OppPage\";\n\n//Import actions\nimport { getUser, fetchMetadata } from \"../actions\";\nimport OppDetail from \"./Opportunities/OppDetail\";\nimport OppCreate from \"./Opportunities/OppCreate\";\n// import history object\nimport history from \"../history\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.fetchMetadata(\"Opportunity\");\n  }\n  renderContent() {\n    const { user } = this.props;\n    if (user.success === null) {\n      this.props.getUser();\n      return (\n        <div style={{ height: \"500px\" }} className=\" segment\">\n          <div className=\"ui active inverted dimmer\">\n            <div className=\"ui text loader\">Loading</div>\n          </div>\n          <p></p>\n        </div>\n      );\n    } else if (user.success === false) {\n      return (\n        <div>\n          <LandingPage />\n        </div>\n      );\n    } else if (user.success === true) {\n      return (\n        <>\n          <Header\n            orgName={user.data.orgName}\n            userName={user.data.display_name}\n          />\n          <div className=\"ui grid\">\n            <div className=\"four wide column\">\n              <SideBar />\n            </div>\n            <div className=\"twelve wide column\">\n              <Switch>\n                <Route path=\"/\" exact component={DashboardPage} />\n                <Route path=\"/opportunities\" exact component={OppPage} />\n                <Route\n                  path=\"/opportunities/create\"\n                  exact\n                  component={OppCreate}\n                />\n                <Route path=\"/opportunities/:id\" exact component={OppDetail} />\n                <Route path=\"/leads\" exact component={LeadList} />\n              </Switch>\n            </div>\n          </div>\n        </>\n      );\n    }\n  }\n  render() {\n    return (\n      <div className=\"ui container\">\n        <Router history={history}>{this.renderContent()}</Router>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nexport default connect(mapStateToProps, { getUser, fetchMetadata })(App);\n","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/reducers/index.js",[],"/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/components/Opportunities/OppList.js",[],"/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/history.js",[],"/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/components/Leads/LeadList.js",[],"/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/components/dashboard/DashboardPage.js",[],"/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/components/LandingPage.js",["136"],"import React from \"react\";\nimport { reduxForm, Field } from \"redux-form\";\nimport { connect } from \"react-redux\";\n\nimport { signIn, changeLoadingStatus } from \"../actions\";\nimport { LOADING, NOT_LOADING } from \"../actions/types\";\n\nimport \"../static/css/landingPage.css\";\nimport salesforceLogo from \"../static/images/salesforceLogo.png\";\n\nclass LandingPage extends React.Component {\n  onSubmit = (formValues) => {\n    console.log(formValues);\n    this.props.changeLoadingStatus(LOADING);\n    this.props.signIn(formValues);\n  };\n  componentDidMount() {\n    this.props.changeLoadingStatus(NOT_LOADING);\n  }\n\n  renderInput({ iconName, input, meta }) {\n    return (\n      <div className=\"ui left icon input\">\n        <input {...input}></input>\n        <i className={iconName}></i>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div style={{ marginTop: \"100px\" }} className=\"ui placeholder segment\">\n        <div className=\"ui internally celled grid stackable\">\n          <div className=\"row\">\n            <div className=\"eight wide column center aligned\">\n              <div className=\"landing-column\">\n                <form\n                  onSubmit={this.props.handleSubmit(this.onSubmit)}\n                  className={\n                    this.props.loadingStatus ? `ui form loading` : \"ui form\"\n                  }\n                >\n                  <div className=\"field\">\n                    <label>Email</label>\n                    <Field\n                      name=\"username\"\n                      component={this.renderInput}\n                      iconName=\"user icon\"\n                    />\n                  </div>\n                  <div className=\"field\">\n                    <label>Password</label>\n                    <Field\n                      name=\"password\"\n                      component={this.renderInput}\n                      iconName=\"lock icon\"\n                    />\n                  </div>\n                  <div className=\"field\">\n                    <label>Security Token</label>\n                    <Field\n                      name=\"securityToken\"\n                      component={this.renderInput}\n                      iconName=\"lock icon\"\n                    />\n                  </div>\n                  <button\n                    style={{ backgroundColor: \"#04A3E3\", color: \"white\" }}\n                    className=\"ui submit button\"\n                  >\n                    Login\n                  </button>\n                </form>\n              </div>\n            </div>\n            <div className=\"eight wide column center aligned\">\n              <div className=\"landing-column\">\n                <h1>Simple Sales Tracker</h1>\n                <p>\n                  A simple interface to track opportunities and leads for any\n                  sales process\n                </p>\n                <div style={{ fontStyle: \"italic\" }}>Powered By</div>\n                <img className=\"ui image\" src={salesforceLogo}></img>\n                <a\n                  style={{ marginTop: \"30px\" }}\n                  href=\"https://developer.salesforce.com/signup\"\n                >\n                  Sign up for a Salesforce developer account to try it out\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLandingPage = reduxForm({\n  form: \"signInForm\",\n})(LandingPage);\n\nconst mapStateToProps = (state) => {\n  return {\n    loadingStatus: state.loadingStatus,\n  };\n};\n\nexport default connect(mapStateToProps, { signIn, changeLoadingStatus })(\n  LandingPage\n);\n","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/components/Header.js",["137"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../actions\";\nimport salesforceLogo from \"../static/images/salesforceLogo.png\";\n\nclass Header extends React.Component {\n  onSignOut = () => {\n    this.props.signOut();\n  };\n  render() {\n    return (\n      <div className=\"ui segment\">\n        <div className=\"ui secondary stackable menu\">\n          <div className=\"item\">\n            <img src={salesforceLogo}></img>\n            <div style={{ marginLeft: \"20px\" }}>{this.props.orgName}</div>\n          </div>\n          <div className=\"right menu\">\n            <div className=\"item\">\n              <div style={{ marginRight: \"20px\" }}>\n                Hi {this.props.userName}\n              </div>\n              <button\n                onClick={this.onSignOut}\n                style={{ backgroundColor: \"#04A3E3\", color: \"white\" }}\n                className=\"ui primary button\"\n              >\n                Log Out\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { signOut })(Header);\n","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/actions/index.js",["138"],"import {\n  GET_USER,\n  NO_USER,\n  SIGN_OUT,\n  FETCH_ACCOUNTS,\n  FETCH_CONTACTS,\n  FETCH_OPPORTUNITIES,\n  FETCH_METADATA,\n  CREATE_OPPORTUNITY,\n  FETCH_PATHS,\n  UPDATE_OPPORTUNITY,\n  VIEW,\n} from \"./types\";\n//import salesforceService from \"../apis/salesforceService\";\nimport axios from \"axios\";\nimport history from \"../history\";\n\n// auth actions\nexport const signIn = (formValues) => {\n  return async (dispatch) => {\n    try {\n      const response = await axios.post(\"/api/v1/auth/login\", formValues);\n      dispatch({ type: GET_USER, payload: response.data });\n    } catch (error) {\n      dispatch({ type: NO_USER, payload: error.response.data });\n    }\n  };\n};\n\nexport const signOut = () => {\n  return async (dispatch) => {\n    const response = await axios.get(\"/api/v1/auth/logout\");\n    dispatch({ type: SIGN_OUT });\n  };\n};\n\nexport const getUser = () => {\n  return async (dispatch) => {\n    try {\n      const response = await axios.get(\"/api/v1/auth/user\");\n      dispatch({ type: GET_USER, payload: response.data });\n    } catch (error) {\n      console.log(error);\n      dispatch({ type: NO_USER, payload: error.response.data });\n    }\n  };\n};\n\n// UI actions\nexport const changeFormStatus = (status) => {\n  return { type: status };\n};\n\n// UI actions\nexport const changeLoadingStatus = (status) => {\n  return { type: status };\n};\n\nexport const changeEditMode = (status) => {\n  return { type: status };\n};\n\n// Account Actions\nexport const fetchAccounts = (params) => {\n  return async (dispatch) => {\n    const response = await axios.get(\n      `/api/v1/sobjects/Account?limit=50&page=1`\n    );\n    dispatch({ type: FETCH_ACCOUNTS, payload: response.data });\n  };\n};\n\n// Contact Actions\nexport const fetchContacts = (params) => {\n  return async (dispatch) => {\n    const response = await axios.get(\n      `/api/v1/sobjects/Contact?limit=10&page=1`\n    );\n    dispatch({ type: FETCH_CONTACTS, payload: response.data });\n  };\n};\n\n// Opportunity Actions\n// get opportunities\nexport const fetchOpportunities = (params) => {\n  return async (dispatch) => {\n    const response = await axios.get(`/api/v1/sobjects/Opportunity`, {\n      params: params,\n    });\n    dispatch({ type: FETCH_OPPORTUNITIES, payload: response.data });\n  };\n};\n\n// create an opportunity\nexport const createOpportunity = (formValues) => {\n  return async (dispatch) => {\n    const response = await axios.post(\n      `/api/v1/sobjects/Opportunity`,\n      formValues\n    );\n    dispatch({ type: CREATE_OPPORTUNITY, payload: response.data });\n    history.push(\"/opportunities\");\n  };\n};\n\n// update an opportunity\nexport const updateOpportunity = (id, formValues) => {\n  return async (dispatch) => {\n    const response = await axios.put(\n      `/api/v1/sobjects/Opportunity/${id}`,\n      formValues\n    );\n    dispatch({ type: UPDATE_OPPORTUNITY, payload: response.data });\n    dispatch({ type: VIEW });\n  };\n};\n\n// metadata actions\nexport const fetchMetadata = (type) => {\n  return async (dispatch) => {\n    const response = await axios.get(`/api/v1/sobjects/metadata/${type}`);\n    dispatch({ type: FETCH_METADATA, payload: response.data.data });\n  };\n};\n\nexport const fetchPaths = () => {\n  return async (dispatch) => {\n    const response = await axios.get(`/api/v1/metadata/PathAssistant`);\n    dispatch({ type: FETCH_PATHS, payload: response.data.data });\n  };\n};\n","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/apis/salesforceService.js",[],"/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/actions/types.js",[],"/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/reducers/formStatusReducer.js",[],["139","140"],"/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/reducers/userReducer.js",["141"],"import { GET_USER, NO_USER, SIGN_OUT } from \"../actions/types\";\n\nconst userReducer = (state = { success: null }, action) => {\n  switch (action.type) {\n    case GET_USER:\n      return action.payload;\n    case NO_USER:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/components/SideBar.js",["142"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nclass SideBar extends React.Component {\n  render() {\n    const { user } = this.props;\n    return (\n      <div>\n        <div className=\"ui card\">\n          <div className=\"content\">\n            <div className=\"center aligned author\">\n              <img\n                className=\"ui small rounded image\"\n                src={user.data.photos.picture}\n              ></img>\n            </div>\n          </div>\n          <div className=\"content\">\n            <Link to=\"/\" className=\"center aligned header\">\n              {user.data.display_name}\n            </Link>\n            <div className=\"center aligned description\">\n              <p>{user.data.user_type}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"ui fluid vertical pointing menu\">\n          <NavLink to=\"/opportunities\" className=\"item\">\n            Opportunities\n          </NavLink>\n          <NavLink to=\"/leads\" className=\"item\">\n            Leads\n          </NavLink>\n          <NavLink to=\"/accounts\" className=\"item\">\n            Accounts\n          </NavLink>\n          <NavLink to=\"/contacts\" className=\"item\">\n            Contacts\n          </NavLink>\n          <NavLink to=\"/tasks\" className=\"item\">\n            Tasks\n          </NavLink>\n          <NavLink to=\"/funnels\" className=\"item\">\n            Funnels\n          </NavLink>\n          <div className=\"item\">\n            <div className=\"ui transparent icon input\">\n              <input type=\"text\" placeholder=\"Search\"></input>\n              <i className=\"search icon\"></i>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nexport default connect(mapStateToProps)(SideBar);\n","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/components/Opportunities/OppPage.js",[],"/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/components/FilterBar.js",["143"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { reduxForm, Field } from \"redux-form\";\nimport { Dropdown } from \"semantic-ui-react\";\nimport history from \"../history\";\n\nimport \"../static/css/filterBar.css\";\n\nclass FilterBar extends React.Component {\n  renderInput = (props) => {\n    return (\n      <Dropdown\n        key={1}\n        onChange={(e, { value }) => props.input.onChange(value)}\n        clearable\n        placeholder={props.placeholder}\n        selection\n        options={props.options}\n        value={props.value}\n      />\n    );\n  };\n\n  renderContent() {\n    const { accounts, contacts, leads, opps, funnels } = this.props;\n    console.log(contacts);\n    const temp = { accounts, contacts, leads, opps, funnels };\n    const categories = Object.values({ ...temp });\n    const testForRender = categories\n      .filter((item) => item !== undefined)\n      .every((item) => Object.keys(item).length !== 0);\n    const titles = [\"AccountId\", \"Contact\", \"Lead\", \"Opportunity\", \"Funnel\"];\n    for (let i = 0; i < 5; i++) {\n      if (categories[i] !== undefined) {\n        categories[i].title = titles[i];\n      }\n    }\n    console.log(testForRender);\n    if (testForRender) {\n      return categories.map((cat) => {\n        if (cat !== undefined) {\n          const title = cat.title;\n\n          const options = Object.values(cat)\n            .filter((item) => typeof item === \"object\")\n            .map((item) => {\n              return { key: item.Id, text: item.Name, value: item.Id };\n            });\n          return (\n            <div key={cat.title} className=\"field\">\n              <Field\n                name={title}\n                component={this.renderInput}\n                placeholder={title}\n                options={options}\n              />\n            </div>\n          );\n        }\n      });\n    }\n    return <div key={1} className=\"field loading segment\"></div>;\n  }\n\n  onSubmit = (formValues) => {\n    this.props.onSelectFilter(formValues);\n  };\n\n  render() {\n    return (\n      <div className=\"ui menu\">\n        <div className=\"item\">\n          <form\n            className=\"ui form\"\n            onSubmit={this.props.handleSubmit(this.onSubmit)}\n          >\n            <div className=\"filter-bar-form inline fields\">\n              <label>Filter</label>\n              {this.renderContent()}\n              <div className=\"field\">\n                <button\n                  style={{ backgroundColor: \"#04A3E3\", color: \"white\" }}\n                  className=\"ui button primary\"\n                >\n                  Filter\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n        <div className=\"right item\">\n          <Link\n            to={`${history.location.pathname}/create`}\n            style={{ backgroundColor: \"#04A3E3\", color: \"white\" }}\n            className=\"ui button primary\"\n          >\n            New\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nFilterBar = reduxForm({\n  form: \"filterForm\",\n})(FilterBar);\n\nconst mapStateToProps = (state) => {\n  return {\n    filterMenuStatus: state.filterMenuStatus,\n  };\n};\n\nexport default connect(mapStateToProps)(FilterBar);\n","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/reducers/accountReducer.js",[],"/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/reducers/contactReducer.js",[],"/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/reducers/opportunityReducer.js",[],"/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/components/Opportunities/OppItem.js",[],"/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/reducers/loadingReducer.js",[],"/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/components/Opportunities/OppDetail.js",[],"/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/components/Opportunities/OppCreate.js",[],"/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/components/Opportunities/OppForm.js",["144"],"import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport { Dropdown } from \"semantic-ui-react\";\nimport {\n  changeLoadingStatus,\n  fetchAccounts,\n  fetchMetadata,\n} from \"../../actions\";\nimport { LOADING, NOT_LOADING } from \"../../actions/types\";\n\nclass OppForm extends React.Component {\n  componentDidMount() {\n    this.props.fetchMetadata(\"Opportunity\");\n    this.props.fetchAccounts();\n    this.props.changeLoadingStatus(NOT_LOADING);\n  }\n  getPicklistFields() {\n    const picklistFields = this.props.fields.filter(\n      (field) =>\n        field.name === \"StageName\" ||\n        field.name === \"LeadSource\" ||\n        field.name === \"Type\"\n    );\n    return _.mapKeys(picklistFields, \"name\");\n  }\n  renderInput({ label, input, meta }) {\n    return (\n      <div className=\"field\">\n        <label>{label}</label>\n        <input {...input} placeholder={label}></input>\n      </div>\n    );\n  }\n\n  renderTextInput({ label, input, meta }) {\n    return (\n      <div className=\"field\">\n        <label>{label}</label>\n        <textarea {...input} rows=\"2\" className=\"\"></textarea>\n      </div>\n    );\n  }\n\n  renderDateInput({ label, input, meta }) {\n    return (\n      <div className=\"field\">\n        <label>{label}</label>\n        <input {...input} type=\"date\"></input>\n      </div>\n    );\n  }\n\n  renderDropdown = ({ value, picklist, input, label }) => {\n    let options;\n\n    if (!picklist) {\n      options = Object.values(this.props.accounts)\n        .filter((item) => typeof item === \"object\")\n        .map((item) => {\n          return { key: item.Id, text: item.Name, value: item.Id };\n        });\n    } else {\n      options = picklist.picklistValues.map((item) => {\n        return { key: item.value, text: item.value, value: item.value };\n      });\n    }\n    return (\n      <div className=\"field\">\n        <label>{label}</label>\n        <select {...input}>\n          <option>Select a {label}</option>\n          {options.map((item) => {\n            return (\n              <option key={item.key} value={item.value}>\n                {item.text}\n              </option>\n            );\n          })}\n          <option>test 2</option>\n        </select>\n      </div>\n    );\n  };\n\n  onSubmit = (formValues) => {\n    this.props.onSubmit(formValues);\n    this.props.changeLoadingStatus(LOADING);\n  };\n\n  renderForm() {\n    const picklistFields = this.getPicklistFields();\n    return (\n      <form\n        className={this.props.loadingStatus ? \"ui form loading\" : \"ui form\"}\n        onSubmit={this.props.handleSubmit(this.onSubmit)}\n      >\n        <div className=\"scrolling content\">\n          <Field\n            name=\"AccountId\"\n            component={this.renderDropdown}\n            label=\"Account Name\"\n          />\n          <Field\n            name=\"Name\"\n            component={this.renderInput}\n            label=\"Opportunity Name\"\n          />\n          <Field\n            name=\"Description\"\n            component={this.renderTextInput}\n            label=\"Description\"\n          />\n          <Field\n            name=\"StageName\"\n            component={this.renderDropdown}\n            picklist={picklistFields.StageName}\n            label=\"Stage Name\"\n          />\n          <Field name=\"Amount\" component={this.renderInput} label=\"Amount\" />\n          <Field\n            name=\"Probability\"\n            component={this.renderInput}\n            label=\"Probability\"\n          />\n          <Field\n            name=\"CloseDate\"\n            component={this.renderDateInput}\n            label=\"Close Date\"\n          />\n          <Field\n            name=\"Type\"\n            component={this.renderDropdown}\n            picklist={picklistFields.Type}\n            label=\"Type\"\n          />\n          <Field\n            name=\"LeadSource\"\n            component={this.renderDropdown}\n            picklist={picklistFields.LeadSource}\n            label=\"Lead Source\"\n          />\n\n          <button className=\"fluid ui button primary\">Submit</button>\n        </div>\n      </form>\n    );\n  }\n\n  render() {\n    if (Object.keys(this.props.accounts).length === 0) {\n      return <div className=\"ui segment loading\"></div>;\n    }\n    return <div>{this.renderForm()}</div>;\n  }\n}\n\nOppForm = reduxForm({\n  form: \"oppForm\",\n})(OppForm);\n\nconst mapStateToProps = (state) => {\n  return {\n    fields: state.metadata.Opportunity.fields,\n    loadingStatus: state.loadingStatus,\n    accounts: state.accounts,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  changeLoadingStatus,\n  fetchAccounts,\n  fetchMetadata,\n})(OppForm);\n","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/components/Modal.js",[],"/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/reducers/metadataReducer.js",["145"],"import _ from \"lodash\";\nimport { FETCH_METADATA, FETCH_PATHS } from \"../actions/types\";\n\nconst metadataReducer = (state = {}, action) => {\n  switch (action.type) {\n    case FETCH_METADATA:\n      return { ...state, [action.payload.label]: action.payload };\n    case FETCH_PATHS:\n      return { ...state, paths: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default metadataReducer;\n","/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/components/Path.js",["146","147","148"],"/Users/timruesink/Projects/Portfolio/01-salesforceApp/client/src/reducers/editModeReducer.js",[],{"ruleId":"149","severity":1,"message":"150","line":7,"column":10,"nodeType":"151","messageId":"152","endLine":7,"endColumn":16},{"ruleId":"149","severity":1,"message":"153","line":8,"column":8,"nodeType":"151","messageId":"152","endLine":8,"endColumn":15},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"149","severity":1,"message":"158","line":3,"column":33,"nodeType":"151","messageId":"152","endLine":3,"endColumn":37},{"ruleId":"149","severity":1,"message":"159","line":3,"column":39,"nodeType":"151","messageId":"152","endLine":3,"endColumn":52},{"ruleId":"160","severity":1,"message":"161","line":84,"column":17,"nodeType":"162","endLine":84,"endColumn":64},{"ruleId":"160","severity":1,"message":"161","line":15,"column":13,"nodeType":"162","endLine":15,"endColumn":39},{"ruleId":"149","severity":1,"message":"163","line":32,"column":11,"nodeType":"151","messageId":"152","endLine":32,"endColumn":19},{"ruleId":"154","replacedBy":"164"},{"ruleId":"156","replacedBy":"165"},{"ruleId":"149","severity":1,"message":"166","line":1,"column":29,"nodeType":"151","messageId":"152","endLine":1,"endColumn":37},{"ruleId":"160","severity":1,"message":"161","line":13,"column":15,"nodeType":"162","endLine":16,"endColumn":16},{"ruleId":"167","severity":1,"message":"168","line":41,"column":35,"nodeType":"169","messageId":"170","endLine":41,"endColumn":37},{"ruleId":"149","severity":1,"message":"171","line":5,"column":10,"nodeType":"151","messageId":"152","endLine":5,"endColumn":18},{"ruleId":"149","severity":1,"message":"172","line":1,"column":8,"nodeType":"151","messageId":"152","endLine":1,"endColumn":9},{"ruleId":"149","severity":1,"message":"172","line":5,"column":8,"nodeType":"151","messageId":"152","endLine":5,"endColumn":9},{"ruleId":"173","severity":1,"message":"174","line":31,"column":9,"nodeType":"162","endLine":36,"endColumn":10},{"ruleId":"149","severity":1,"message":"175","line":46,"column":21,"nodeType":"151","messageId":"152","endLine":46,"endColumn":33},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'history' is defined but never used.","no-native-reassign",["176"],"no-negated-in-lhs",["177"],"'Link' is defined but never used.","'BrowserRouter' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'response' is assigned a value but never used.",["176"],["177"],"'SIGN_OUT' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Dropdown' is defined but never used.","'_' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'currentStage' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]